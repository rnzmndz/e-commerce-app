@startuml
    class UserController {
        -UserService userService
        +UserController(UserService userService)
        +ResponseEntity~UserDTO~ createUser(UserCreateDTO userCreateDTO)
        +ResponseEntity~UserDTO~ getUserById(Long id)
        +ResponseEntity~Page~UserDTO~~ getAllUsers(Pageable pageable)
        +ResponseEntity~UserDTO~ updateUser(Long id, UserUpdateDTO userUpdateDTO)
        +ResponseEntity~Void~ deleteUser(Long id)
        +ResponseEntity~UserDTO~ addAuthorities(Long id, Set~Authority~ authorities)
        +ResponseEntity~UserDTO~ removeAuthority(Long id, Authority authority)
        +ResponseEntity~Page~UserListDTO~~ getUsersByRole(UserRole role, Pageable pageable)
        +ResponseEntity~Boolean~ checkUserExists(String username, String email)
        +ResponseEntity~Void~ changePassword(Long id, String newPassword)
    }

    class UserService {
        <<Interface>>
        +UserDTO createUser(UserCreateDTO userCreateDTO)
        +UserDTO getById(Long id)
        +Page~UserDTO~ getAll(Pageable pageable)
        +UserDTO updateById(Long id, UserUpdateDTO userUpdateDTO)
        +void deleteById(Long id)
        +UserDTO addAuthoritiesToUser(Long id, Set~Authority~ authorities)
        +UserDTO removeAuthorityFromUser(Long id, Authority authority)
        +Page~UserListDTO~ getUserByRole(UserRole userRole, Pageable pageable)
        +boolean existsByUsernameOrEmail(String username, String email)
        +void changePassword(Long id, String newPassword)
    }

    UserController --> UserService : uses
@enduml